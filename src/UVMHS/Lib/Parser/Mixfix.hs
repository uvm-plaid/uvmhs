module UVMHS.Lib.Parser.Mixfix where

import UVMHS.Core

import UVMHS.Lib.Annotated

import UVMHS.Lib.Parser.ParserContext
import UVMHS.Lib.Parser.GenParser

-----------------------------------
-- Fully Functor/Comonad general --
-----------------------------------

data GenMixesF t f a = GenMixesF
  { genMixesFPrefix  ‚à∑ GenParser t (f a ‚Üí a)
  , genMixesFPostfix ‚à∑ GenParser t (f a ‚Üí a)
  , genMixesFInfix  ‚à∑ GenParser t (f a ‚Üí f a ‚Üí a)
  , genMixesFInfixL ‚à∑ GenParser t (f a ‚Üí f a ‚Üí a)
  , genMixesFInfixR ‚à∑ GenParser t (f a ‚Üí f a ‚Üí a)
  }

instance Null (GenMixesF t f a) where null = GenMixesF null null null null null
instance (Ord t) ‚áí Append (GenMixesF t f a) where
  GenMixesF pre‚ÇÅ post‚ÇÅ inf‚ÇÅ infl‚ÇÅ infr‚ÇÅ ‚ß∫ GenMixesF pre‚ÇÇ post‚ÇÇ inf‚ÇÇ infl‚ÇÇ infr‚ÇÇ =
    GenMixesF (pre‚ÇÅ ‚ß∫ pre‚ÇÇ) (post‚ÇÅ ‚ß∫ post‚ÇÇ) (inf‚ÇÅ ‚ß∫ inf‚ÇÇ) (infl‚ÇÅ ‚ß∫ infl‚ÇÇ) $ infr‚ÇÅ ‚ß∫ infr‚ÇÇ
instance (Ord t) ‚áí Monoid (GenMixesF t f a)

data GenMixfixF t f a = GenMixfixF
  { genMixfixFTerminals ‚à∑ GenParser t a
  , genMixfixFLevels ‚à∑ ‚Ñï64 ‚á∞ GenMixesF t f a
  }
instance Null (GenMixfixF t f a) where null = GenMixfixF null null
instance (Ord t) ‚áí Append (GenMixfixF t f a) where GenMixfixF ts‚ÇÅ ls‚ÇÅ ‚ß∫ GenMixfixF ts‚ÇÇ ls‚ÇÇ = GenMixfixF (ts‚ÇÅ ‚ß∫ ts‚ÇÇ) (ls‚ÇÅ ‚ß∫ ls‚ÇÇ)
instance (Ord t) ‚áí Monoid (GenMixfixF t f a)

gfmixOnlyTerms ‚à∑ GenMixfixF t f a ‚Üí GenMixfixF t f a
gfmixOnlyTerms m = GenMixfixF (genMixfixFTerminals m) null

gfmixPrefix ‚à∑ ‚Ñï64 ‚Üí GenParser t (f a ‚Üí a) ‚Üí GenMixfixF t f a
gfmixPrefix l p = null { genMixfixFLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesFPrefix = p} ] }

gfmixPostfix ‚à∑ ‚Ñï64 ‚Üí GenParser t (f a ‚Üí a) ‚Üí GenMixfixF t f a
gfmixPostfix l p = null { genMixfixFLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesFPostfix = p} ] }

gfmixInfix ‚à∑ ‚Ñï64 ‚Üí GenParser t (f a ‚Üí f a ‚Üí a) ‚Üí GenMixfixF t f a
gfmixInfix l p = null { genMixfixFLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesFInfix = p} ] }

gfmixInfixL ‚à∑ ‚Ñï64 ‚Üí GenParser t (f a ‚Üí f a ‚Üí a) ‚Üí GenMixfixF t f a
gfmixInfixL l p = null { genMixfixFLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesFInfixL = p} ] }

gfmixInfixR ‚à∑ ‚Ñï64 ‚Üí GenParser t (f a ‚Üí f a ‚Üí a) ‚Üí GenMixfixF t f a
gfmixInfixR l p = null { genMixfixFLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesFInfixR = p} ] }

gfmixTerminal ‚à∑ GenParser t a ‚Üí GenMixfixF t f a
gfmixTerminal p = null { genMixfixFTerminals = p}

-- PRE PRE x INFR PRE PRE y
-- ‚âà
-- PRE (PRE (x INFR (PRE (PRE y))))
--
-- x POST POST INFL y POST POST
-- ‚âà
-- ((((x POST) POST) INFL y) POST) POST

gfmixfix ‚à∑
  ‚àÄ t f a. (Ord t,Comonad f)
  ‚áí (GenParser t (f a) ‚Üí GenParser t (f a))
  ‚Üí (GenParser t (f a) ‚Üí GenParser t (f a))
  ‚Üí (GenParser t a ‚Üí GenParser t (f a))
  ‚Üí GenMixfixF t f a
  ‚Üí GenParser t (f a)
gfmixfix new bracket cxt (GenMixfixF terms levels‚ÇÄ) = loop levels‚ÇÄ
  where
    loop ‚à∑ ‚Ñï64 ‚á∞ GenMixesF t f a ‚Üí GenParser t (f a)
    loop levels = case dminView levels of
      None ‚Üí new $ cxt terms
      Some ((i :* mixes) :* levels') ‚Üí
        let msg = "lvl " ‚ß∫ alignRightFill '0' 3 (showùïä i)
        in
        new $ cxt $ buildLevelDirected msg mixes $
        new $ cxt $ buildLevelNondirected msg mixes $
        loop levels'
    buildLevelNondirected ‚à∑ ùïä ‚Üí GenMixesF t f a ‚Üí GenParser t (f a) ‚Üí GenParser t a
    buildLevelNondirected msg mixes nextLevel = do
      x ‚Üê nextLevel
      concat
        [ gpErr (msg ‚ß∫ " infix") $ levelInfAfterOne x mixes nextLevel
        , return $ extract x
        ]
    buildLevelDirected ‚à∑ ùïä ‚Üí GenMixesF t f a ‚Üí GenParser t (f a) ‚Üí GenParser t a
    buildLevelDirected msg mixes nextLevel = concat
      [ do
          x ‚Üê nextLevel
          concat
            [ gpErr (msg ‚ß∫ " infixl") $ levelInflAfterOne x mixes nextLevel
            , gpErr (msg ‚ß∫ " infixr") $ levelInfrAfterOne x mixes nextLevel
            , return $ extract x
            ]
      , gpErr (msg ‚ß∫ " infixr") $ levelInfrNotAfterOne mixes nextLevel
      ]
    levelInfAfterOne ‚à∑ f a ‚Üí GenMixesF t f a ‚Üí GenParser t (f a) ‚Üí GenParser t a
    levelInfAfterOne x‚ÇÅ mixes nextLevel = do
      f ‚Üê genMixesFInfix mixes
      x‚ÇÇ ‚Üê nextLevel
      return $ f x‚ÇÅ x‚ÇÇ
    levelInflAfterOne ‚à∑ f a ‚Üí GenMixesF t f a ‚Üí GenParser t (f a) ‚Üí GenParser t a
    levelInflAfterOne x‚ÇÅ mixes nextLevel = do
      x‚ÇÅ' ‚Üê cxt $ concat
        [ do f ‚Üê genMixesFInfixL mixes
             x‚ÇÇ ‚Üê nextLevel
             return $ f x‚ÇÅ x‚ÇÇ
        , do f ‚Üê genMixesFPostfix mixes
             return $ f x‚ÇÅ
        ]
      concat
        [ levelInflAfterOne x‚ÇÅ' mixes nextLevel
        , return $ extract x‚ÇÅ'
        ]
    levelInfrAfterOne ‚à∑ f a ‚Üí GenMixesF t f a ‚Üí GenParser t (f a) ‚Üí GenParser t a
    levelInfrAfterOne x‚ÇÅ mixes nextLevel = do
      f ‚Üê genMixesFInfixR mixes
      x‚ÇÇ ‚Üê bracket $ cxt $ levelInfr mixes nextLevel
      return $ f x‚ÇÅ x‚ÇÇ
    levelInfr ‚à∑ GenMixesF t f a ‚Üí GenParser t (f a) ‚Üí GenParser t a
    levelInfr mixes nextLevel = concat
      [ do x‚ÇÅ ‚Üê nextLevel
           concat
             [ levelInfrAfterOne x‚ÇÅ mixes nextLevel
             , return $ extract x‚ÇÅ
             ]
      , levelInfrNotAfterOne mixes nextLevel
      ]
    levelInfrNotAfterOne ‚à∑ GenMixesF t f a ‚Üí GenParser t (f a) ‚Üí GenParser t a
    levelInfrNotAfterOne mixes nextLevel = do
      f ‚Üê genMixesFPrefix mixes
      x ‚Üê bracket $ cxt $ levelInfr mixes nextLevel
      return $ f x

-- Instantiate with Annotation Comonad --

gfmixfixWithContext ‚à∑ ‚àÄ t c a. (Ord t) ‚áí (SrcCxt ‚Üí c) ‚Üí ùïä ‚Üí GenMixfixF t (ùê¥ c) a ‚Üí GenParser t (ùê¥ c a)
gfmixfixWithContext f s = gfmixfix (gpNewContext s) gpNewExpressionContext (map (mapATag f) ‚àò gpWithContextRendered)

---------------
-- Non-fancy --
---------------

data GenMixes t a = GenMixes
  { genMixesPrefix  ‚à∑ GenParser t (a ‚Üí a)
  , genMixesPostfix ‚à∑ GenParser t (a ‚Üí a)
  , genMixesInfix  ‚à∑ GenParser t (a ‚Üí a ‚Üí a)
  , genMixesInfixL ‚à∑ GenParser t (a ‚Üí a ‚Üí a)
  , genMixesInfixR ‚à∑ GenParser t (a ‚Üí a ‚Üí a)
  }

instance Null (GenMixes t a) where null = GenMixes null null null null null
instance (Ord t) ‚áí Append (GenMixes t a) where
  GenMixes pre‚ÇÅ post‚ÇÅ inf‚ÇÅ infl‚ÇÅ infr‚ÇÅ ‚ß∫ GenMixes pre‚ÇÇ post‚ÇÇ inf‚ÇÇ infl‚ÇÇ infr‚ÇÇ =
    GenMixes (pre‚ÇÅ ‚ß∫ pre‚ÇÇ) (post‚ÇÅ ‚ß∫ post‚ÇÇ) (inf‚ÇÅ ‚ß∫ inf‚ÇÇ) (infl‚ÇÅ ‚ß∫ infl‚ÇÇ) (infr‚ÇÅ ‚ß∫ infr‚ÇÇ)
instance (Ord t) ‚áí Monoid (GenMixes t a)

data GenMixfix t a = GenMixfix
  { genMixfixTerminals ‚à∑ GenParser t a
  , genMixfixLevels ‚à∑ ‚Ñï64 ‚á∞ GenMixes t a
  }

instance Null (GenMixfix t a) where null = GenMixfix null bot
instance (Ord t) ‚áí Append (GenMixfix t a) where GenMixfix ts‚ÇÅ ls‚ÇÅ ‚ß∫ GenMixfix ts‚ÇÇ ls‚ÇÇ = GenMixfix (ts‚ÇÅ ‚ß∫ ts‚ÇÇ) (ls‚ÇÅ ‚ß∫ ls‚ÇÇ)
instance (Ord t) ‚áí Monoid (GenMixfix t a)

gmixOnlyTerms ‚à∑ GenMixfix t a ‚Üí GenMixfix t a
gmixOnlyTerms m = GenMixfix (genMixfixTerminals m) null

gmixPrefix ‚à∑ ‚Ñï64 ‚Üí GenParser t (a ‚Üí a) ‚Üí GenMixfix t a
gmixPrefix l p = null { genMixfixLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesPrefix = p} ] }

gmixPostfix ‚à∑ ‚Ñï64 ‚Üí GenParser t (a ‚Üí a) ‚Üí GenMixfix t a
gmixPostfix l p = null { genMixfixLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesPostfix = p} ] }

gmixInfix ‚à∑ ‚Ñï64 ‚Üí GenParser t (a ‚Üí a ‚Üí a) ‚Üí GenMixfix t a
gmixInfix l p = null { genMixfixLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesInfix = p} ] }

gmixInfixL ‚à∑ ‚Ñï64 ‚Üí GenParser t (a ‚Üí a ‚Üí a) ‚Üí GenMixfix t a
gmixInfixL l p = null { genMixfixLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesInfixL = p} ] }

gmixInfixR ‚à∑ ‚Ñï64 ‚Üí GenParser t (a ‚Üí a ‚Üí a) ‚Üí GenMixfix t a
gmixInfixR l p = null { genMixfixLevels = dict [ l ‚Ü¶‚ô≠ null {genMixesInfixR = p} ] }

gmixTerminal ‚à∑ GenParser t a ‚Üí GenMixfix t a
gmixTerminal p = null { genMixfixTerminals = p}

pureGMixesF ‚à∑ (Ord t) ‚áí GenMixes t a ‚Üí GenMixesF t ID a
pureGMixesF (GenMixes pre post inf infl infr) =
  GenMixesF
  (map kextract pre)
  (map kextract post)
  (map kextract2 inf)
  (map kextract2 infl)
  (map kextract2 infr)

pureMixfixF ‚à∑ (Ord t) ‚áí GenMixfix t a ‚Üí GenMixfixF t ID a
pureMixfixF (GenMixfix terminals levels) = GenMixfixF terminals $ map pureGMixesF levels

gmixfix ‚à∑ (Ord t) ‚áí GenMixfix t a ‚Üí GenParser t a
gmixfix mix = unID ^$ gfmixfix id id (map ID) (pureMixfixF mix)

gmixfixWithContext ‚à∑ (Ord t) ‚áí (SrcCxt ‚Üí c) ‚Üí ùïä ‚Üí GenMixfix t a ‚Üí GenParser t (ùê¥ c a)
gmixfixWithContext f s = map (mapATag f) ‚àò gpNewContext s ‚àò gpWithContextRendered ‚àò gmixfix
